/*
 Generated by typeshare 1.7.0
*/

export enum Direction {
  Desc = "desc",
  Asc = "asc",
}

export type Order<T> = {
  by?: T;
  direction?: Direction;
};

export type Pagination = {
  page?: number;
  perPage?: number;
  totalPages?: number;
};

export type PaginationResponse<T> = {
  items: T;
  pagination: Pagination;
};

export type PageDataIndexItemMeta = {
  fileSize?: string;
  fileType?: string;
  created?: string;
  modified?: string;
};

export type PageDataIndexItemDataItem = {
  key: string;
  value: string;
  meta: Value;
};

export type PageDataIndexItem = {
  id: string;
  name: string;
  meta?: PageDataIndexItemMeta;
  tags: number[];
  data: PageDataIndexItemDataItem[];
};

export type PageDataIndex = {
  items: PageDataIndexItem[];
  pagination: Pagination;
};

export enum PageDataIndexOrderBy {
  Modified = "Modified",
  Created = "Created",
  Size = "Size",
  Id = "Id",
}
